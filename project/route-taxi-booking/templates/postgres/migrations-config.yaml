apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-migrations-config
  namespace: m
data:
  dump.sql: |
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'users') THEN
        CREATE TABLE users
        (
            id         SERIAL PRIMARY KEY,
            email      VARCHAR(100) NOT NULL UNIQUE,
            password   VARCHAR(255) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
      END IF;
    END
    $$;

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: user-migrations-config
  namespace: m
data:
  dump.sql: |
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'users') THEN
        CREATE TABLE users
        (
            id         SERIAL PRIMARY KEY,
            username   VARCHAR(50)         NOT NULL,
            first_name VARCHAR(50),
            last_name  VARCHAR(50),
            email      VARCHAR(100) UNIQUE NOT NULL,
            phone      VARCHAR(15)
        );
      END IF;
    END
    $$;

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: route-migrations-config
  namespace: m
data:
  dump.sql: |
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'routes') THEN
    CREATE TABLE routes
    (
        id          SERIAL PRIMARY KEY,
        from_city   VARCHAR(100) NOT NULL,
        to_city     VARCHAR(100) NOT NULL,
        departure   TIMESTAMP NOT NULL,
        arrival     TIMESTAMP NOT NULL,
        capacity    INTEGER NOT NULL,
        price       DECIMAL(10,2) NOT NULL,
        created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    END IF;
    END
    $$;

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: booking-migrations-config
  namespace: m
data:
  dump.sql: |
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'bookings') THEN
    CREATE TABLE bookings
    (
        id         SERIAL PRIMARY KEY,
        user_id    INTEGER NOT NULL,
        route_id   INTEGER NOT NULL,
        seats      INTEGER NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (route_id) REFERENCES routes(id)
    );
    END IF;
    END
    $$;