apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: auth-postgresql
  namespace: m
spec:
  serviceName: "auth-postgresql"
  replicas: 1
  selector:
    matchLabels:
      app: auth-postgresql
  template:
    metadata:
      labels:
        app: auth-postgresql
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          envFrom:
            - secretRef:
                name: auth-db-secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: user-postgresql
  namespace: m
spec:
  serviceName: "user-postgresql"
  replicas: 1
  selector:
    matchLabels:
      app: user-postgresql
  template:
    metadata:
      labels:
        app: user-postgresql
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          envFrom:
            - secretRef:
                name: user-db-secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi

# ---

# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: redis
#   namespace: m
# spec:
#   serviceName: "redis"
#   replicas: 1
#   selector:
#     matchLabels:
#       app: redis
#   template:
#     metadata:
#       labels:
#         app: redis
#     spec:
#       containers:
#         - name: redis
#           image: redis:latest
#           command: [ "sh", "-c" ]
#           args:
#             - |
#               mkdir -p /usr/local/etc/redis &&
#               echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
#               echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
#               echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
#               echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
#               echo "user default on >$REDIS_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
#               redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
#           ports:
#             - containerPort: 6379
#           env:
#             - name: REDIS_PASSWORD
#               valueFrom:
#                 secretKeyRef:
#                   name: auth-db-secret
#                   key: REDIS_PASSWORD
#           volumeMounts:
#             - name: redis-storage
#               mountPath: /data
#   volumeClaimTemplates:
#     - metadata:
#         name: redis-storage
#       spec:
#         accessModes: [ "ReadWriteOnce" ]
#         resources:
#           requests:
#             storage: 1Gi