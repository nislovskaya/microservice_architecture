{
  "info": {
    "name": "HW06 - Auth & User Services",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://arch.homework"
    }
  ],
  "item": [
    {
      "name": "1. Register User 1",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set('user1_email', pm.variables.replaceIn('{{$randomEmail}}'));",
              "pm.environment.set('user1_password', pm.variables.replaceIn('{{$randomPassword}}'));"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function() {",
              "    pm.response.to.have.status(201);",
              "});",
              "const response = pm.response.json();",
              "pm.environment.set('user1_id', response.id);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "url": "{{baseUrl}}/auth/register",
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "email",
              "value": "{{user1_email}}"
            },
            {
              "key": "password",
              "value": "{{user1_password}}"
            }
          ]
        }
      }
    },
    {
      "name": "2. Try to Get User Profile Without Auth",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 401', function() {",
              "    pm.response.to.have.status(401);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": "{{baseUrl}}/user/{{user1_id}}"
      }
    },
    {
      "name": "3. Login User 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "const response = pm.response.json();",
              "pm.environment.set('user1_token', response.token);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "url": "{{baseUrl}}/auth/login",
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "email",
              "value": "{{user1_email}}"
            },
            {
              "key": "password",
              "value": "{{user1_password}}"
            }
          ]
        }
      }
    },
    {
      "name": "4. Update User 1 Profile",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set('new_email', pm.variables.replaceIn('{{$randomEmail}}'));"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": "{{baseUrl}}/user/{{user1_id}}",
        "body": {
          "mode": "raw",
          "raw": "{\"email\": \"{{new_email}}\"}"
        }
      }
    },
    {
      "name": "5. Verify Profile Updated",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Email was updated', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response.email).to.eql(pm.environment.get('new_email'));",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          }
        ],
        "url": "{{baseUrl}}/user/{{user1_id}}"
      }
    },
    {
      "name": "6. Logout User 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          }
        ],
        "url": "{{baseUrl}}/auth/logout"
      }
    },
    {
      "name": "7. Register User 2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set('user2_email', pm.variables.replaceIn('{{$randomEmail}}'));",
              "pm.environment.set('user2_password', pm.variables.replaceIn('{{$randomPassword}}'));"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function() {",
              "    pm.response.to.have.status(201);",
              "});",
              "const response = pm.response.json();",
              "pm.environment.set('user2_id', response.id);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "url": "{{baseUrl}}/auth/register",
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "email",
              "value": "{{user2_email}}"
            },
            {
              "key": "password",
              "value": "{{user2_password}}"
            }
          ]
        }
      }
    },
    {
      "name": "8. Login User 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "const response = pm.response.json();",
              "pm.environment.set('user2_token', response.token);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "url": "{{baseUrl}}/auth/login",
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "email",
              "value": "{{user2_email}}"
            },
            {
              "key": "password",
              "value": "{{user2_password}}"
            }
          ]
        }
      }
    },
    {
      "name": "9. Try to Access User 1 Profile as User 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 403', function() {",
              "    pm.response.to.have.status(403);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user2_token}}"
          }
        ],
        "url": "{{baseUrl}}/user/{{user1_id}}"
      }
    }
  ]
}